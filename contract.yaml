swagger: '2.0'
info:
  title: BAWAG P.S.K. Accounts API - Public Endpoints - Homescreen
  version: "1.0.0"
  description: >
    # **Introduction**

    **BAWAG P.S.K. Accounts API** provides Accounts services for the accounts
    that belong to the user associated with the token passed as `Authorization`
    in the API call`

        - Notational Conventions
      The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
      "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
      document are to be interpreted as described in [RFC 2119](https://tools.ietf.org/html/rfc2119).

    ## **URLs**


    - All calls must have the prefix defined in the `BASE URL`.

    - Parameters within the URL are `case_sensitive`.


    ## **Request**


    * The API requires JSON input to be UTF-8 encoded, and generates UTF-8
    encoded JSON output


    ### General Query Parameters


    * `limit`: This parameter restricts the number of objects returned. Values
    less then `1` will be ignored.

    * `offset`: This parameter specifies the (0-based) index of the first object
    from a collection to be returned (i.e. all objects before this offset will
    be skipped). Values less then `1` will be ignored. Together with `limit`,
    this value can be used to implement paging.


    This example uses the limit and offset parameters to return four of the
    user's accounts, starting with the third one:

    - /accounts?limit=4&offset=2


    ### HTTP Request Headers

    Note: header names marked with * are required.

    HTTP Request Header            | Example Value        | Description

    ------------------------------ | -------------------- |
    -------------------------

    User-Agent*                    | Mozilla/5.0 ...      | The client
    application implementing the network protocol for communication between the
    client and server. The header should identify the application, including the
    specific version of the application.

    Content-Type                   | application/json     | Content-type,
    required for POST and PUT requests, only if a payload is sent in the HTTP
    body.

    Authorization                  | Bearer 905619d5-61b0-3b85-b5ec-49c31722bac1
    | Contains the OAuth2 access token. Set this header on all API calls where
    an Authorization is required (see [HTTP/1.0
    Authorization](http://tools.ietf.org/html/rfc1945#section-10.2))

    x-bawagpsk-app-id*             | BAWAGPSK-FOOBAR-APP  | Application
    identifier. BAWAG P.S.K. assigns this ID to your application.

    x-bawagpsk-vendor-id           | 61187a88-7c7c-3579-ba7d-e1f42739f20c | The
    vendor-id which identifies the client device. Must be the same vendor-id
    that has been set by the client while requesting the OAuth2 access token
    (see endpoint /token of the Authorization-API). For some applications a
    vendor-id is required, for others it is optional.

    x-bawagpsk-language*           | DE                   | Language as
    ISO-639-1 code. The response will be returned in this language if there is a
    translation for it (otherwise the response will be in german)

    x-bawagpsk-geospatial-location | 48.173818, 16.388445 | The geographic
    location of the client device. Longitude and latitude, separated by a comma.



    ## **Response**


    ### Typical Status Codes


    * `200 OK` - The request was successful

    * `201 Created` - The request was successful and a resource was created

    * `204 No Content` - The server successfully processed the request, but is
    not returning any content

    * `400 Bad Request` - The request could not be understood or was missing
    required parameters

    * `401 Unauthorized` - User is not authenticated or does not have permissions for the requested operation

    * `403 Forbidden` - Access denied

    * `404 Not Found` - Resource was not found


    ### Global Status Codes


    The following status codes may be returned by any endpoint (therefore they
    are not listed on the individual endpoints):

    * `400 Bad Request` - The request could not be understood or was missing
    required parameters

    * `401 Unauthorized` - User is not authenticated or does not have permissions for the requested operation

    * `403 Forbidden` - Access denied

    * `404 Not Found` - Resource was not found

    * `405 Method Not Allowed` - Requested method is not supported for the
    specified resource

    * `409 Conflict` - The request could not be completed due to a conflict with
    the current state of the resource (possibly caused by concurrent submits)

    * `415 Unsupported Media Type` - ContentType header missing or invalid

    * `500 Internal Server Error` - An unexpected error occurred while
    processing the request

    * `503 Service Unavailable` - The application is temporary unavailable (e.g.
    due to scheduled maintenance)


    ### Response Messages


    - Error, warning, and information response messages (eg. validation errors,
    backend errors) are provided via response headers `x-bawagpsk-errors`,
    `x-bawagpsk-warnings`, and `x-bawagpsk-infos` respectively.

    - The content of the headers is in JSON-Format. The HTTP Status code is set
    accordingly.



    ### HTTP Response Headers


    HTTP Response Header      | Example Value                         |
    Description

    ------------------------- | ------------------------------------- |
    ------------------

    Content-Type              | application/json; charset=utf-8       | The API
    always returns data in JSON format, UTF-8 encoded

    x-bawagpsk-correlation-id | 1014caf6-e1b1-48ea-b097-bb7d09254ab5  | The
    correlation ID uniquely identifies the request and can be used when
    debugging problems

    x-bawagpsk-errors         | [{"code": "...", "text": "..."}]      | Error
    messages (e.g. validation errors, backend errors)

    x-bawagpsk-warnings       | [{"code": "...", "text": "..."}]      | Warning
    messages

    x-bawagpsk-infos          | [{"code": "...", "text": "..."}]      | Info
    messages



    ### Global x-bawagpsk-errors


    Authentication failures will result in the following error codes:


    Error code                          | HTTP Error                  | Reason

    ------------------------------------| --------------------------- |
    -------------------------------------------

    ERR\_NOT\_AUTHORIZED                | 401 UNAUTHORIZED            | Not
    authorized, e.g. invalid vendor ID

    ERR\_INVALID\_AUTHENTICATION_TOKEN  | 401 UNAUTHORIZED            | Access
    token is wrong

    ERR\_AUTHENTICATION\_TOKEN\_EXPIRED | 401 UNAUTHORIZED            | Access
    token is expired, not valid any more

    ERR\_TOO\_MANY\_REQUESTS            | 429 TOO\_MANY\_REQUESTS     | Too many
    requests in a short time

    ERR\_USER\_DEACTIVATED              | 401 UNAUTHORIZED            | The user
    has been deactivated for all APPs

    ERR\_USER\_APP\_DEACTIVATED         | 401 UNAUTHORIZED            | The user
    of the app has been deactivated for the particular APP

    ERR\_USER\_DELETED                  | 401 UNAUTHORIZED            | The user
    has been deleted for all APPs

    ERR\_SYSTEM\_FAILUE                 | 500 INTERNAL\_SERVER\_ERROR | General
    system failure, e.g. token validation failed

    USER\_AUTHENTICATION\_TIMEOUT      | 401 UNAUTHORIZED            | The user
    session has timed out. The active Login-Variant User Credential (either
    FINGERPRINT, GESTURE, or PASSWORD) must be sent for validation to the
    server. See the validation Endpoints "POST
    /profile/authentications/app-fingerprint/validation" etc. The active
    Login-Variant is to be found in the "appLoginVariant" of resource Endpoint
    "GET /profile/userinfo"


    Other global x-bawagpsk-errors:


    Error code                        | HTTP Error                | Reason

    ----------------------------------| ------------------------- |
    -------------------------------------------

    ERR\_INVALID\_JSON                | 400 BAD\_REQUEST          | JSON data in
    body is invalid

    ERR\_ILLEGAL\_INPUT\_DATA         | 400 BAD\_REQUEST          | Illegal
    input data

    ERR\_ILLEGAL\_XXXX                | 400 BAD\_REQUEST          | Illegal
    input data, XXXX specifies the entity, e.g. ERR\_ILLEGAL\_LANGUAGE

    ERR\_MISSING\_INPUT\_DATA         | 400 BAD\_REQUEST          | Missing
    input data

    ERR\_MISSING\_XXXX                | 400 BAD\_REQUEST          | Missing
    input data, XXXX specifies the entity, e.g. ERR\_MISSING\_SCOPE

    ERR\_NO\_CONTENT                  | 400 BAD\_REQUEST          | The request
    required a payload but no body has been sent


    ## **Getting started**


    ### Register your Application to use the API


    In order to use the API, you have to register your Application (=your
    `client`) at BAWAG P.S.K. providing some
     information about your company and Application as well as the BAWAG P.S.K. API Endpoints it will have access to.
     See also [oAuth Client Registration](https://tools.ietf.org/html/rfc6749#section-2)
    After approval BAWAG P.S.K. will create and assign to your application the
    credentials `client_id`, `client_secret`
     and `bawagpsk-app-id`. You MUST keep these credentials secure.
    - The `client_id` and `client_secret` MUST be used ONLY when your
    Application obtains or revokes
    [access](https://tools.ietf.org/html/rfc6749#section-1.4)
     resp. [refresh](https://tools.ietf.org/html/rfc6749#section-1.5) tokens from BAWAG P.S.K. Authorization API. Never use them in requests to BAWAG P.S.K. API.
     See more details in the BAWAG P.S.K. Authorization API description.

    ## OAuth 2.0


    ** [OAuth 2.0 abstract Protocol
    flow](https://tools.ietf.org/html/rfc6749#section-1.2) **


    - `BAWAG P.S.K. Authorization API` is issuing `Access` and `Refresh` Tokens
    to your `Application`
     after successfully authenticating the `End User` and obtaining authorization.

    - The `Applikation` MUST provide the `Access Token` when it sends protected
    requests to the `BAWAG P.S.K. APIs`.

    - When the current `Access Token` becomes invalid or expires, your
    `Application` uses the `Refresh Token` to obtain a new
     `Access Token` from `BAWAG P.S.K. Authorization API`. See [OAuth 2.0 Refreshing an Expired Access Token](https://tools.ietf.org/html/rfc6749#section-1.5)
    According to the [oAuth2
    Roles](https://tools.ietf.org/html/rfc6749#section-1.1)

    - BAWAG P.S.K. API is the `resource server`

    - The End User of your application is the `resource owner`

    - Your Application is the `client`

    - BAWAG P.S.K. Authorization API is the `authorisation server`


    See more details about OAuth 2 in the BAWAG P.S.K. Authorization API
    description and in the [oAuth 2.0
    specification](https://tools.ietf.org/html/rfc6749#section-1).



    **Tokens**


    * [Access Tokens](https://tools.ietf.org/html/rfc6749#section-1.4) are
    credentials used to access Protected Resources of BAWAG P.S.K. APIs.
     Your application must provide the Access Token in the `Authorization` header.
     Access Tokens are issued to the Application by BAWAG P.S.K. Authorization API.

    * [Refresh Tokens](https://tools.ietf.org/html/rfc6749#section-1.5) are
    credentials used to obtain access tokens.
     Refresh tokens are issued to the Application by BAWAG P.S.K. Authorization API
     and are used to obtain a new access token when the current access token becomes invalid or expires.
     Unlike access tokens, refresh tokens are intended for use only with BAWAG P.S.K. Authorization API and are never sent to the BAWAG P.S.K. APIs.

    * In the BAWAG P.S.K. Authorization API you will find more details about how
    to create or revoke Access and Refresh Tokens as well as how to refresh an
    expired Access Token.

    ** Scopes**

    The BAWAG P.S.K. API endpoints contain different services - such as Account
    Service,
     Push Notifications Service, Transfer Service etc. These endpoints are virtually gathered
     into `Scopes`, such like `ebanking`, `push_notification` and so on.
    As mentioned above - when you register your Application, you provide the
    information about the Resource Endpoints your Application
     will have access to - after approval your Application is pre-configured for the requested Scopes.

    When the Application requests authorization, the BAWAG P.S.K. Authorization
    API will process the request using these pre-defined
     Scopes and will include them in the "scope" response parameter to inform the applicaion of the scope of the access token issued.

    When the Application requests protected Resources and presents the Access
    Token,
     the BAWAG P.S.K. API will process the requests only if the requested Resource is in the Scopes
     of the Token - otherwise the API will return Status `401 - Unouthorized`.

     The authorization and token endpoints of BAWAG P.S.K. Authorization API allow the Application to specify the scope
     of the access request using the "scope" request parameter.

    For details see the BAWAG P.S.K. Authorization API description as well as
    [OAuth 2 Access Token
    Scope](https://tools.ietf.org/html/rfc6749#section-3.3)


    # API Endpoints overview


    ## Bank Accounts

    The bank accounts the user has access to.

    - `GET /accounts` Returns the list of accounts at that the user has access to.
      Among the other data like IBAN, Bic, account type, account privileges etc. this endpoint returns an `accountId` for each account also. This `accountId` must be used to access the account-specific API endpoints.

      **Note:** the returned accounts list including the acvcount balance can be cached by the server (usually for 15 minutes).

    - `GET /accounts/{accountId}` Returns a detailed information about the account specified by `accountId`.

    **Note:** Call this endpoint if your APP shows the changed account balance after the user signed a money transfer from this account and the transfer was then successfully booked by the Server.


    - `GET /accounts/{accountId}/transactions` Returns the account transactions respectively.


host: api.bawagpsk.com
basePath: /lucy-homescreen/v1
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
tags:
  - name: accounts
    description: "Bank accounts the user has access to."

paths:
  "/accounts":
    get:
      tags: [accounts]
      summary: "Retrieve all accounts the user has access to."
      description:  |
        Among other data, this endpoint returns an `accountId` for each account.
        This `accountId` must be used to access other account-specific endpoints.

        **Note 1:** the returned accounts list can be cached by the server (usually for 15 minutes)

        **Note 2:** Accounts not legitimated for eBanking and closed accounts are excluded of the returned accounts list.

      operationId: getAccounts
      parameters:
        # common header parameters for every endpoint
        - name: User-Agent
          description: |
            The client application implementing the network protocol for communication between the client and server. The header should identify the application, including the specific version of the application.
          in: header
          required: true
          type: string
          x-mca-example: "Mozilla/5.0 ..."
        - name: Authorization
          description: "Contains the OAuth2 access token. Set this header on all API calls where an Authorization is required (see [HTTP/1.0 Authorization](http://tools.ietf.org/html/rfc1945#section-10.2))"
          in: header
          required: false
          type: string
          x-mca-example: "Bearer 905619d5-61b0-3b85-b5ec-49c31722bac1"
        - name: x-bawagpsk-app-id
          description: "Application identifier. BAWAG P.S.K. assigns this ID to your application."
          in: header
          required: true
          type: string
          x-mca-example: "BAWAGPSK-TEST-APP"
        - name: x-bawagpsk-language
          description: "Language as ISO-639-1 code. The response will be returned in this language if there is a translation for it (otherwise the response will be in German)"
          in: header
          required: true
          type: string
          x-mca-example: "DE"
        - name: x-bawagpsk-geospatial-location
          description: "The geographic location of the client device. Longitude and latitude, separated by a comma."
          in: header
          required: false
          type: string
          x-mca-example: "48.173818, 16.388445"
        - name: limit
          in: query
          description: "See **General Query Parameters** section"
          required: false
          type: integer
          format: int32
          x-mca-example: 1
        - name: offset
          in: query
          description: "See **General Query Parameters** section"
          required: false
          type: integer
          format: int32
          x-mca-example: 1
        - name: basicInfo
          in: query
          description: Identifier which determines whether full or basic account info will be returned.
            Supported for deposit and saving product type
          required: false
          default: false
          type: boolean

      responses:
        "200":
          description: "A (possibly empty) list of accounts"
          schema:
            type: array
            items:
              $ref: '#/definitions/Account'
          headers:
            x-bawag-correlation-id:
              description: "The correlation ID uniquely identifies the request (required)"
              type: string
            x-bawagpsk-errors:
              description: "A list of error messages in JSON format (optional)"
              type: string
            x-bawagpsk-warnings:
              description: "A list of warning messages in JSON format (optional)"
              type: string
            x-bawagpsk-infos:
              description: "A list of information messages in JSON format (optional)"
              type: string
        "400":
          description: "Bad Request / Invalid parameters. Mandatory parameters in url/header/body are missing/empty/invalid.."
          headers:
            x-bawag-correlation-id:
              description: "The correlation ID uniquely identifies the request (required)"
              type: string
            x-bawagpsk-errors:
              description: "A list of error messages in JSON format (optional)"
              type: string
            x-bawagpsk-warnings:
              description: "A list of warning messages in JSON format (optional)"
              type: string
            x-bawagpsk-infos:
              description: "A list of information messages in JSON format (optional)"
              type: string
        "401":
          description: "Unauthorized. 1) The token is invalid (ERR_INVALID_AUTHENTICATION_TOKEN), 2) the token has expired (ERR_AUTHENTICATION_TOKEN_EXPIRED) or 3) the token has not been sent. 4) The user has been deactivated for all APPs (ERR_USER_DEACTIVATED). 5) The user has been deleted for all APPs (ERR_USER_DELETED). 6) The user of the app has been deactivated for the particular APP (ERR_USER_APP_DEACTIVATED) ."
          headers:
            x-bawag-correlation-id:
              description: "The correlation ID uniquely identifies the request (required)"
              type: string
            x-bawagpsk-errors:
              description: "A list of error messages in JSON format (optional)"
              type: string
            x-bawagpsk-warnings:
              description: "A list of warning messages in JSON format (optional)"
              type: string
            x-bawagpsk-infos:
              description: "A list of information messages in JSON format (optional)"
              type: string
  "/accounts/{accountId}":
    get:
      tags: [accounts]
      summary: "Retrieve data of a single account."
      description: |
        **Note:** Call this endpoint if your APP shows the changed account balance after the user signed a money transfer from this account and the transfer was then successfully booked by the Server.
      operationId: getAccount
      parameters:
        # common header parameters for every endpoint
        - name: User-Agent
          description: |
            The client application implementing the network protocol for communication between the client and server. The header should identify the application, including the specific version of the application.
          in: header
          required: true
          type: string
          x-mca-example: "Mozilla/5.0 ..."
        - name: Authorization
          description: "Contains the OAuth2 access token. Set this header on all API calls where an Authorization is required (see [HTTP/1.0 Authorization](http://tools.ietf.org/html/rfc1945#section-10.2))"
          in: header
          required: false
          type: string
          x-mca-example: "Bearer 905619d5-61b0-3b85-b5ec-49c31722bac1"
        - name: x-bawagpsk-app-id
          description: "Application identifier. BAWAG P.S.K. assigns this ID to your application."
          in: header
          required: true
          type: string
          x-mca-example: "BAWAGPSK-TEST-APP"
        - name: x-bawagpsk-language
          description: "Language as ISO-639-1 code. The response will be returned in this language if there is a translation for it (otherwise the response will be in German)"
          in: header
          required: true
          type: string
          x-mca-example: "DE"
        - name: x-bawagpsk-geospatial-location
          description: "The geographic location of the client device. Longitude and latitude, separated by a comma."
          in: header
          required: false
          type: string
          x-mca-example: "48.173818, 16.388445"
        - name: accountId
          in: path
          description: "The account identifier (as returned by the `/accounts` endpoint)"
          required: true
          type: string
          x-mca-example: "fd0e01fc3f17f43f21ec9520fb16c8c02375a9bf939853e0"
        - name: basicInfo
          in: query
          description: Identifier which determines whether full or basic account info will be returned.
            Supported for deposit and saving product type
          required: false
          default: false
          type: boolean
      responses:
        "200":
          description: "Account data"
          schema:
            $ref: '#/definitions/AccountInfo'
          headers:
            x-bawag-correlation-id:
              description: "The correlation ID uniquely identifies the request (required)"
              type: string
            x-bawagpsk-errors:
              description: "A list of error messages in JSON format (optional)"
              type: string
            x-bawagpsk-warnings:
              description: "A list of warning messages in JSON format (optional)"
              type: string
            x-bawagpsk-infos:
              description: "A list of information messages in JSON format (optional)"
              type: string
        "401":
          description: "Unauthorized. 1) The token is invalid (ERR_INVALID_AUTHENTICATION_TOKEN), 2) the token has expired (ERR_AUTHENTICATION_TOKEN_EXPIRED) or 3) the token has not been sent. 4) The user has been deactivated for all APPs (ERR_USER_DEACTIVATED). 5) The user has been deleted for all APPs (ERR_USER_DELETED). 6) The user of the app has been deactivated for the particular APP (ERR_USER_APP_DEACTIVATED) ."
          headers:
            x-bawag-correlation-id:
              description: "The correlation ID uniquely identifies the request (required)"
              type: string
            x-bawagpsk-errors:
              description: "A list of error messages in JSON format (optional)"
              type: string
            x-bawagpsk-warnings:
              description: "A list of warning messages in JSON format (optional)"
              type: string
            x-bawagpsk-infos:
              description: "A list of information messages in JSON format (optional)"
              type: string
        "404":
          description: "Not found."
          headers:
            x-bawag-correlation-id:
              description: "The correlation ID uniquely identifies the request (required)"
              type: string
            x-bawagpsk-errors:
              description: "A list of error messages in JSON format (optional)"
              type: string
            x-bawagpsk-warnings:
              description: "A list of warning messages in JSON format (optional)"
              type: string
            x-bawagpsk-infos:
              description: "A list of information messages in JSON format (optional)"
              type: string

  "/accounts/{accountId}/transactions":
    get:
      tags: [accounts]
      summary: "Retrieve transactions of an account."
      operationId: getAccountTransactions
      parameters:
        # common header parameters for every endpoint
        - name: User-Agent
          description: |
            The client application implementing the network protocol for communication between the client and server. The header should identify the application, including the specific version of the application.
          in: header
          required: true
          type: string
          x-mca-example: "Mozilla/5.0 ..."
        - name: Authorization
          description: "Contains the OAuth2 access token. Set this header on all API calls where an Authorization is required (see [HTTP/1.0 Authorization](http://tools.ietf.org/html/rfc1945#section-10.2))"
          in: header
          required: false
          type: string
          x-mca-example: "Bearer 905619d5-61b0-3b85-b5ec-49c31722bac1"
        - name: x-bawagpsk-app-id
          description: "Application identifier. BAWAG P.S.K. assigns this ID to your application."
          in: header
          required: true
          type: string
          x-mca-example: "BAWAGPSK-TEST-APP"
        - name: x-bawagpsk-language
          description: "Language as ISO-639-1 code. The response will be returned in this language if there is a translation for it (otherwise the response will be in German)"
          in: header
          required: true
          type: string
          x-mca-example: "DE"
        - name: x-bawagpsk-geospatial-location
          description: "The geographic location of the client device. Longitude and latitude, separated by a comma."
          in: header
          required: false
          type: string
          x-mca-example: "48.173818, 16.388445"
        - name: accountId
          in: path
          description: "The account identifier (as returned by the `/accounts` endpoint)"
          required: true
          type: string
          x-mca-example: "fd0e01fc3f17f43f21ec9520fb16c8c02375a9bf939853e0"
        - name: startDate
          in: query
          description: "Only return transactions with a booking date that is greater than or equal to this value."
          required: false
          type: string
          # note: we don't use "format: date" because the generator currently doesn't support date-only fields
          pattern: ^\d{4}-\d{2}-\d{2}$
          x-mca-example: "2017-01-13"
        - name: endDate
          in: query
          description: "Only return transactions with a booking date that is less than or equal to this value."
          required: false
          type: string
          # note: we don't use "format: date" because the generator currently doesn't support date-only fields
          pattern: ^\d{4}-\d{2}-\d{2}$
          x-mca-example: "2017-12-31"
        - name: amountFrom
          in: query
          description: "Only return transactions with a amount higher than provided one."
          required: false
          type: number
          format: double
          x-mca-example: 1.50
        - name: amountTo
          in: query
          description: "Only return transactions with a amount lower than provided one."
          required: false
          type: number
          format: double
          x-mca-example: 2.50
        - name: type
          in: query
          description: "Only return transactions with given type of transaction, ingoing transactions(IN) or outgoing transactions(OUT)."
          required: false
          type: string
          enum: [IN, OUT]
          x-mca-example: "IN"
        - name: bookingText
          in: query
          description: "Only return transactions which contains provided booking text."
          required: false
          type: string
          x-mca-example: "Billa"
        - name: limit
          in: query
          description: "See **General Query Parameters** section"
          required: false
          type: integer
          format: int32
          x-mca-example: 1
        - name: offset
          in: query
          description: "See **General Query Parameters** section"
          required: false
          type: integer
          format: int32
          x-mca-example: 1
        - name: lastNumOperation
          in: query
          description: "Get all transactions before transaction with this value. Used for transaction pagination."
          required: false
          type: string
          x-mca-example: "1000"
        - name: lastNumTransaction
          in: query
          description: "Get all transactions before transaction with this value. Used for transaction pagination."
          required: false
          type: string
          x-mca-example: "1"
        - name: lastBookingDate
          in: query
          description: "Only return transactions with after following booking date. Used for pagionation."
          required: false
          type: string
          # note: we don't use "format: date" because the generator currently doesn't support date-only fields
          pattern: ^\d{4}-\d{2}-\d{2}$
          x-mca-example: "2017-12-31"
      responses:
        "200":
          description: "A list of account transactions"
          schema:
            type: array
            items:
              $ref: '#/definitions/AccountTransaction'
          headers:
            x-bawag-correlation-id:
              description: "The correlation ID uniquely identifies the request (required)"
              type: string
            x-bawagpsk-errors:
              description: "A list of error messages in JSON format (optional)"
              type: string
            x-bawagpsk-warnings:
              description: "A list of warning messages in JSON format (optional)"
              type: string
            x-bawagpsk-infos:
              description: "A list of information messages in JSON format (optional)"
              type: string
        "401":
          description: "Unauthorized. 1) The token is invalid (ERR_INVALID_AUTHENTICATION_TOKEN), 2) the token has expired (ERR_AUTHENTICATION_TOKEN_EXPIRED) or 3) the token has not been sent. 4) The user has been deactivated for all APPs (ERR_USER_DEACTIVATED). 5) The user has been deleted for all APPs (ERR_USER_DELETED). 6) The user of the app has been deactivated for the particular APP (ERR_USER_APP_DEACTIVATED) ."
          headers:
            x-bawag-correlation-id:
              description: "The correlation ID uniquely identifies the request (required)"
              type: string
            x-bawagpsk-errors:
              description: "A list of error messages in JSON format (optional)"
              type: string
            x-bawagpsk-warnings:
              description: "A list of warning messages in JSON format (optional)"
              type: string
            x-bawagpsk-infos:
              description: "A list of information messages in JSON format (optional)"
              type: string
        "404":
          description: "Not found."
          headers:
            x-bawag-correlation-id:
              description: "The correlation ID uniquely identifies the request (required)"
              type: string
            x-bawagpsk-errors:
              description: "A list of error messages in JSON format (optional)"
              type: string
            x-bawagpsk-warnings:
              description: "A list of warning messages in JSON format (optional)"
              type: string
            x-bawagpsk-infos:
              description: "A list of information messages in JSON format (optional)"
              type: string
  "/accounts/{accountId}/transactions/categorizations":
    post:
      tags: [accounts]
      summary: Update transaction category
      description: |-
        Update transaction category.
      operationId: updateTransactionCategory
      parameters:
        - name: User-Agent
          description: |
            The client application implementing the network protocol for communication between the client and server. The header should identify the application, including the specific version of the application.
          in: header
          required: true
          type: string
          x-mca-example: "Mozilla/5.0 ..."
        - name: Authorization
          description: "Contains the OAuth2 access token. Set this header on all API calls where an Authorization is required (see [HTTP/1.0 Authorization](http://tools.ietf.org/html/rfc1945#section-10.2))"
          in: header
          required: false
          type: string
          x-mca-example: "Bearer 905619d5-61b0-3b85-b5ec-49c31722bac1"
        - name: x-bawagpsk-app-id
          description: "Application identifier. BAWAG P.S.K. assigns this ID to your application."
          in: header
          required: true
          type: string
          x-mca-example: "BAWAGPSK-TEST-APP"
        - name: x-bawagpsk-language
          description: "Language as ISO-639-1 code. The response will be returned in this language if there is a translation for it (otherwise the response will be in German)"
          in: header
          required: true
          type: string
          x-mca-example: "DE"
        - name: x-bawagpsk-geospatial-location
          description: "The geographic location of the client device. Longitude and latitude, separated by a comma."
          in: header
          required: false
          type: string
          x-mca-example: "48.173818, 16.388445"
        - name: accountId
          in: path
          description: "The account identifier (as returned by the `/accounts` endpoint)"
          required: true
          type: string
        - name: transactionCategoryUpdate
          in: body
          required: true
          description: |-
            New value for the transaction category field.
          schema:
            $ref: '#/definitions/CategoryUpdate'
      responses:
        200:
          description: |-
            Transaction category resource successfully updated.
        400:
          description: |-
            resource update failed for bad request data, see x-bawagpsk-errors
            for a detailed description.
        404:
          description: |-
            Transaction not found
        401:
          description: |-
            Token invalid or expired.

definitions:
  Account:
    description: "A user's account"
    properties:
      accountId:
        type: string
        description: The account identifier
        example: "fd0e01fc3f17f43f21ec9520fb16c8c02375a9bf939853e0"
      iban:
        type: string
        description: The IBAN (International Bank Account Number)
        example: "AT521400099999999999"
      bic:
        type: string
        description: The BIC (Business Identifier Code)
        example: "BAWAATWW"
      type:
        type: string
        description: The account types "DEPOSITS", "SAVINGS", "CREDIT_CARD", "PREPAID", "TIME_DEPOSIT", "LOAN", "BROKERAGE", "UNKNOWN"
        example: "DEPOSITS"
      accountName:
        type: string
        description: The account name
        example: "Giro Max Mustermann"
      accountName2:
        type: string
        description: The account name 2 (e.g. "Max Mustermanns personal account")
        example: "Max Mustermanns personal account"
      alias:
        type: string
        description: The account alias as defined by the user
        example: "My house keeping account"
      currencyCode:
        type: string
        description: The ISO-4217 code of the account currency
        example: "EUR"
      productGroupCode:
        type: string
        description: The product group code
        example: "02"
      productCode:
        type: string
        description: The product code (e.g. B400)
        example: "B400"
      productCodeShortDescription:
        type: string
        description: The  product code description
        example: "Studentenkonto"
      productCodeDescription:
        type: string
        description: The sub product code description (e.g. Studenten Konto Box)
        example: "Studenten Konto Box"
      isAccountOwner:
        description: "Designates whether the user is the owner of this account"
        type: boolean
        example: "true"
      customerNumber:
        type: string
        description: "The number of the customer who owns this account"
        example: "00233458"
      customerWording:
        type: string
        description: "The customer wording"
        example: "Max Mustermann"
      balance:
        description: "The account's current balance"
        type: number
        maxLength: 12
        example: 199.90
      disposableBalance:
        description: "The account's disposable balance. This is the amount that could be transfered from the account"
        type: number
        maxLength: 12
        example: 199.90
      overdraftLimit:
        description: "The account's overdraft limit"
        type: number
        maxLength: 12
        example: 199.90
      referenceAccount:
        $ref: '#/definitions/ReferenceAccount'
      privileges:
        $ref: '#/definitions/AccountPrivileges'
    required: [accountId, iban, bic, type, accountName, currencyCode]
  AccountInfo:
    description: "Detailed account information"
    properties:
      accountId:
        type: string
        description: The account identifier
        example: "fd0e01fc3f17f43f21ec9520fb16c8c02375a9bf939853e0"
      iban:
        type: string
        description: The IBAN (International Bank Account Number)
        example: "AT521400099999999999"
      bic:
        type: string
        description: The BIC (Business Identifier Code)
        example: "BAWAATWW"
      type:
        type: string
        description: The account types "DEPOSITS", "SAVINGS", "CREDIT_CARD", "PREPAID", "TIME_DEPOSIT", "LOAN", "BROKERAGE", "UNKNOWN"
        example: "DEPOSITS"
      accountName:
        type: string
        description: The account name
        example: "Giro Max Mustermann"
      accountName2:
        type: string
        description: The account name 2 (e.g. "Max Mustermanns personal account")
        example: "Max Mustermanns personal account"
      alias:
        type: string
        description: The account alias as defined by the user
        example: "My house keeping account"
      currencyCode:
        type: string
        description: The ISO-4217 code of the account currency
        example: "EUR"
      productGroupCode:
        type: string
        description: The product group code
        example: "02"
      productCode:
        type: string
        description: The product code (e.g. B400)
        example: "B400"
      productCodeShortDescription:
        type: string
        description: The  product code description
        example: "Studentenkonto"
      productCodeDescription:
        type: string
        description: The sub product code description (e.g. Studenten Konto Box)
        example: "Studenten Konto Box"
      isAccountOwner:
        description: "Designates whether the user is the owner of this account."
        type: boolean
        example: "true"
      customerNumber:
        type: string
        description: "The number of the customer who owns this account."
        example: "00233458"
      customerWording:
        type: string
        description: "The customer wording"
        example: "Max Mustermann"
      accountCreationDate:
        type: string
        format: date
        description: The account creation date. ISO 8601 Date (e.g. 2013-05-19)
        example: "2013-05-19"
      balance:
        description: "The account's current balance"
        type: number
        maxLength: 12
        example: 199.90
      disposableBalance:
        description: "The account's disposable balance. This is the amount that could be transfered from the account"
        type: number
        maxLength: 12
        example: 199.90
      averageBalance:
        description: "The accounts average balance"
        type: number
        maxLength: 12
        example: 99.90
      overdraftLimit:
        description: "The account's overdraft limit"
        type: number
        maxLength: 12
        example: 199.90
      currentTotalCredit:
        description: "The account's current total credit"
        type: number
        maxLength: 12
        example: 199.90
      currentTotalDebit:
        description: "The account's current total debit"
        type: number
        maxLength: 12
        example: 199.90
      lastYearTotalCredit:
        description: "The account's last year total credit"
        type: number
        maxLength: 12
        example: 199.90
      lastYearTotalDebit:
        description: "The account's last year total debit"
        type: number
        maxLength: 12
        example: 199.90
      accountStatementDate:
        type: string
        format: date-time
        description: The account statement date. ISO 8601 Date-Time (e.g. 2017-03-30T14:43:01.000+02:00)
        example: "2017-04-30T14:43:01.000+02:00"
      accountStatementNumber:
        type: integer
        description: The account statement number (e.g. 4)
        example: "4"
      accountStatementBalance:
        description: "The balance of the account's statement"
        type: number
        maxLength: 12
        example: 199.90
      accountStatementMediumType:
        type: string
        description: The account statement medium type "E"=Elecronic, "P"=Paper
        example: "E"
      lastTransactionDate:
        type: string
        format: date-time
        description: The date of the last transaction. ISO 8601 Date-Time (e.g. 2017-03-30T14:43:01.000+02:00)
        example: "2017-04-25T14:43:01.000+02:00"
      creditInterestRate:
        description: "The Credit Interest Rate"
        type: number
        maxLength: 10
        example: 1.0905
      creditInterest:
        description: "The Credit Interest amount for the actual period"
        type: number
        maxLength: 10
        example: 122.09
      debitInterestRate:
        description: "The Debit Interest Rate"
        type: number
        maxLength: 10
        example: 6.75
      debitInterest:
        description: "The Debit Interest amount for the actual period"
        type: number
        maxLength: 10
        example: 623.75
      overdraftInterestRate:
        description: "The Overdraft Interest Rate"
        type: number
        maxLength: 10
        example: 9.25
      withholdingTax:
        description: "The amount of withholding tax for the interest earning in the actual period."
        type: number
        maxLength: 12
        example: 98.76
      taxState:
        type: string
        description: The TAX State "Taxable")
        example: "Taxable"
      referenceAccount:
        $ref: '#/definitions/ReferenceAccount'
      privileges:
        $ref: '#/definitions/AccountPrivileges'
    required: [accountId, iban, bic, type, accountName, currencyCode]
  AccountPrivileges:
    description: |
      List of privileges for this account and user.
      The user can transfer from this account only if the privilege 'hasUserTransferRights'=true.

      - hasUserTransferRights:If true, then the user has rights to perfom money transfer from this account. Otherwise the user has read only account privilege.

      - canTransferToReferenceAccountOnly:If true, then money CAN be transfered from this account only to its reference account. No other payee accounts are alowed.

      - isTransferCapableAccount If true, then money CAN be transfered from this account. If the particular user is allowed to transfer from this account is depicted in the privilege 'hasUserTransferRights'

      - isJointSignature:If true, then two users MUST sign a transfer from this account and only afterwards the transfer will be booked.
    properties:
      canSubscribeAccountPushNotifications:
        type: boolean
        description: If true, then the user can subscribe for account push notifications at this account
        readOnly: true
        example: true
      isTransferCapableAccount:
        type: boolean
        description: If true, then money can be transfered from this account
        readOnly: true
        example: true
      canTransferToReferenceAccountOnly:
        type: boolean
        description: If true, then money can be transfered from this account only to its reference account. No other payee accounts are alowed.
        readOnly: true
        example: true
      hasUserTransferRights:
        type: boolean
        description: If true, then the user has rights to perfom money transfer from this account. Otherwise the user has read only account privilege.
        readOnly: true
        example: true
      isJointSignature:
        type: boolean
        description: If true, then two users must sign a transfer from this account
        readOnly: true
        example: false
      hasCards:
        description: "If account has one or more related cards"
        type: boolean
        example: "true"
        default: "false"
  AccountTransaction:
    description: "An account transaction"
    type: object
    properties:
      id:
        type: string
        maxLength: 9
        description: The id of the transaction (numOperation)
        example: '1238'
      bookingDate:
        type: string
        # note: we don't use "format: date" because the generator currently doesn't support date-only fields
        pattern: ^\\d{4}-\\d{2}-\\d{2}$
        description: "The date when the transaction was booked"
        example: '2017-02-27'
      valueDate:
        type: string
        # note: we don't use "format: date" because the generator currently doesn't support date-only fields
        pattern: ^\\d{4}-\\d{2}-\\d{2}$
        description: "The value date (=Valutadatum) of the transaction"
        example: '2017-02-27'
      amount:
        $ref: '#/definitions/CurrencyAmount'
      accountStatementNumber:
        type: integer
        format: int32
        description: "The number of the account statement on which this transaction is printed (if any yet)"
        example: 15
      accountStatementDate:
        type: string
        # note: we don't use "format: date" because the generator currently doesn't support date-only fields
        pattern: ^\\d{4}-\\d{2}-\\d{2}$
        description: "The date of the account statement on which this transaction is printed (if any yet)"
        example: '2017-02-28'
      isImageAttachment:
        type: boolean
        description: 'States if theres an image attached to the transaction'
        example: true
      imageAttachmentURL:
        type: string
        description: 'The URL of the attached image'
        example: '/myimage/95543322'
      bookingText:
        type: array
        items:
          type: string
          maxLength: 57
          example: 'AMAZON PAYMENTS EUROPE S.C.A.'
        description: 'The booking text of the transaction (up to 6 lines)'
        example: ['AMAZON PAYMENTS EUROPE S.C.A.', 'Abbuchung Einzugsermächtigung', 'OG/000001234   TUBDDEDDXXX DE99123456781234567890', 'AMAZON PAYMENTS EUROPE S.C.A.']
      shortBookingText:
        type: string
        maxLength: 75
        description: A short representation of the booking text (e.g. to be used when showing a list of transactions to the customer)
        example: 'OEBB Ticket #1234lbe'
      merchantDetails:
        type: string
        maxLength: 75
        description: 'A short meaningful representation of the transaction (e.g. to be used when showing a list of transactions to the customer)'
        example: 'BILLA DANKT'
      usage:
        type: string
        maxLength: 28
        description: 'The usage of the transaction:'
        example: '(TV Model LG 3455)'
      customerData:
        type: string
        maxLength: 12
        description: >
          The data in the customer data field on electronic transactions (Kundendaten)
          Typically a reference number the receiver told the payee,
          to make it easier for the receiver to find out, what the payment is for. e.g. the nuber of the bill or the insurance number'
        example: '458775654541'
      counterAccountNumber:
        type: string
        maxLength: 11
        description: "The counter account number"
        example: '00125465589'
      counterBankCode:
        type: string
        maxLength: 5
        description: "The counter account bank code"
        example: '14000'
      counterAccountWording:
        type: string
        maxLength: 35
        description: "The wording of the counter account"
        example: "Amazon payments Europe S.C.A."
      category:
        type: string
        maxLength: 25
        description: The category of the transaction
        example: 'Transportation'
      newTransaction:
        type: boolean
        description: 'States if the User has received this transaction before (regardles the customer driven channel)'
      tags:
        type: array
        items:
          type: string
          maxLength: 50
        description: 'A tag associated to this transaction'
        example: ['OEBB', 'transportation']
      numOperation:
        type: string
        description: Transaction numOperation
        example: '1000'
      numTransaction:
        type: string
        description: Transaction numTransaction
        example: '1'
      iban:
        type: string
        description: transaction of iban
        example: 'AT791400000110893604'
      productType:
        type: string
        description: product type related to this transaction
        example: 'deposit'
      accountId:
        type: string
        description: account id related to this transaction
        example: 'deposit-AT791400000110893604'

    required: [id, bookingDate, valueDate, amount]

  CurrencyAmount:
    description: "Currency amount and currency code"
    properties:
      currency:
        type: string
        description: "ISO-4217 currency code"
        minLength: 3
        maxLength: 3
        example: 'EUR'
      amount:
        type: number
        maxLength: 12
        example: 199.90
    required: [currency, amount]
  ReferenceAccount:
    description: "Reference account"
    properties:
      iban:
        type: string
        description: The IBAN (International Bank Account Number)
        example: "AT586000000007898997"
      productGroupCode:
        type: string
        description: The product group code
        example: "02"
      referenceAccountHolderName:
        type: string
        description: The reference account holder name
        example: "Max Holder"
    required: [iban, productGroupCode]
  CategoryUpdate:
    description: |-
      Object holding updates for some values of the category.
    properties:
      customerCategory:
        description: |-
          The new category value.
        type: string
        example: Household
      movementsId:
        $ref: '#/definitions/MovementsId'
  MovementsId:
    description: |-
      Object holding updates for some values of the category.
    properties:
      bookingDate:
        description: Booking date of the transaction
        type: string
        # note: we don't use "format: date" because the generator currently doesn't support date-only fields
        pattern: ^\d{4}-\d{2}-\d{2}$
        example: "2017-01-13"
      iban:
        type: string
        description: The IBAN (International Bank Account Number)
        example: "AT521400099999999999"
      numOperation:
        type: string
      numTransaction:
        type: string